my letters = [
    { letter: "A", v: [
    "     e     ",
    "    d8b    ",
    "   /Y88b   ",
    "  /  Y88b  ",
    " /____Y88b ",
    "/      Y88b"
    ] },

    { letter: "B", v: [
    "888~~\ ",
    "888   |",
    "888 _/ ",
    "888  \ ",
    "888   |",
    "888__/ ",
    ] }
];

func print_header(arr_of_letters) {

    my header = ["","","","","","",""];
    my current_l_n = 0; # may not be needed

    for(header) -> l_n {
        for (arr_of_letters) -> letter {

            my index = find_index_of_letter(letter);

            l_n = l_n ~ letters.v[index]; # may need mod
        }
        l_n = l_n ~ "  "; # may need mod
        header[current_l_n] = ln; # may not be needed
        current_l_n = current_l_n + 1; # may not be needed
    }

    say(header);
}
print_header(["A","B"]);

func find_index_of_letter(search_term) {
    my i = 0;
    for (letters) -> item {
        if(search_term === item.letter) {
            return i;
        }
        i = i + 1;
    }
}